// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: plugin.proto

#ifndef PROTOBUF_INCLUDED_plugin_2eproto
#define PROTOBUF_INCLUDED_plugin_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_plugin_2eproto 

namespace protobuf_plugin_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_plugin_2eproto
namespace proto {
class Argument;
class ArgumentDefaultTypeInternal;
extern ArgumentDefaultTypeInternal _Argument_default_instance_;
class Empty;
class EmptyDefaultTypeInternal;
extern EmptyDefaultTypeInternal _Empty_default_instance_;
class Job;
class JobDefaultTypeInternal;
extern JobDefaultTypeInternal _Job_default_instance_;
class JobResult;
class JobResultDefaultTypeInternal;
extern JobResultDefaultTypeInternal _JobResult_default_instance_;
class ManualInteraction;
class ManualInteractionDefaultTypeInternal;
extern ManualInteractionDefaultTypeInternal _ManualInteraction_default_instance_;
}  // namespace proto
namespace google {
namespace protobuf {
template<> ::proto::Argument* Arena::CreateMaybeMessage<::proto::Argument>(Arena*);
template<> ::proto::Empty* Arena::CreateMaybeMessage<::proto::Empty>(Arena*);
template<> ::proto::Job* Arena::CreateMaybeMessage<::proto::Job>(Arena*);
template<> ::proto::JobResult* Arena::CreateMaybeMessage<::proto::JobResult>(Arena*);
template<> ::proto::ManualInteraction* Arena::CreateMaybeMessage<::proto::ManualInteraction>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace proto {

// ===================================================================

class Job : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Job) */ {
 public:
  Job();
  virtual ~Job();

  Job(const Job& from);

  inline Job& operator=(const Job& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Job(Job&& from) noexcept
    : Job() {
    *this = ::std::move(from);
  }

  inline Job& operator=(Job&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Job& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Job* internal_default_instance() {
    return reinterpret_cast<const Job*>(
               &_Job_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Job* other);
  friend void swap(Job& a, Job& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Job* New() const final {
    return CreateMaybeMessage<Job>(NULL);
  }

  Job* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Job>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Job& from);
  void MergeFrom(const Job& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Job* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 dependson = 4;
  int dependson_size() const;
  void clear_dependson();
  static const int kDependsonFieldNumber = 4;
  ::google::protobuf::uint32 dependson(int index) const;
  void set_dependson(int index, ::google::protobuf::uint32 value);
  void add_dependson(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      dependson() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_dependson();

  // repeated .proto.Argument args = 5;
  int args_size() const;
  void clear_args();
  static const int kArgsFieldNumber = 5;
  ::proto::Argument* mutable_args(int index);
  ::google::protobuf::RepeatedPtrField< ::proto::Argument >*
      mutable_args();
  const ::proto::Argument& args(int index) const;
  ::proto::Argument* add_args();
  const ::google::protobuf::RepeatedPtrField< ::proto::Argument >&
      args() const;

  // string title = 2;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // string description = 3;
  void clear_description();
  static const int kDescriptionFieldNumber = 3;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // .proto.ManualInteraction interaction = 6;
  bool has_interaction() const;
  void clear_interaction();
  static const int kInteractionFieldNumber = 6;
  private:
  const ::proto::ManualInteraction& _internal_interaction() const;
  public:
  const ::proto::ManualInteraction& interaction() const;
  ::proto::ManualInteraction* release_interaction();
  ::proto::ManualInteraction* mutable_interaction();
  void set_allocated_interaction(::proto::ManualInteraction* interaction);

  // uint32 unique_id = 1;
  void clear_unique_id();
  static const int kUniqueIdFieldNumber = 1;
  ::google::protobuf::uint32 unique_id() const;
  void set_unique_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.Job)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > dependson_;
  mutable int _dependson_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::Argument > args_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::proto::ManualInteraction* interaction_;
  ::google::protobuf::uint32 unique_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_plugin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Argument : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Argument) */ {
 public:
  Argument();
  virtual ~Argument();

  Argument(const Argument& from);

  inline Argument& operator=(const Argument& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Argument(Argument&& from) noexcept
    : Argument() {
    *this = ::std::move(from);
  }

  inline Argument& operator=(Argument&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Argument& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Argument* internal_default_instance() {
    return reinterpret_cast<const Argument*>(
               &_Argument_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Argument* other);
  friend void swap(Argument& a, Argument& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Argument* New() const final {
    return CreateMaybeMessage<Argument>(NULL);
  }

  Argument* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Argument>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Argument& from);
  void MergeFrom(const Argument& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Argument* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string description = 1;
  void clear_description();
  static const int kDescriptionFieldNumber = 1;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // string type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // string key = 3;
  void clear_key();
  static const int kKeyFieldNumber = 3;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // string value = 4;
  void clear_value();
  static const int kValueFieldNumber = 4;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:proto.Argument)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_plugin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ManualInteraction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ManualInteraction) */ {
 public:
  ManualInteraction();
  virtual ~ManualInteraction();

  ManualInteraction(const ManualInteraction& from);

  inline ManualInteraction& operator=(const ManualInteraction& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ManualInteraction(ManualInteraction&& from) noexcept
    : ManualInteraction() {
    *this = ::std::move(from);
  }

  inline ManualInteraction& operator=(ManualInteraction&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualInteraction& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ManualInteraction* internal_default_instance() {
    return reinterpret_cast<const ManualInteraction*>(
               &_ManualInteraction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ManualInteraction* other);
  friend void swap(ManualInteraction& a, ManualInteraction& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ManualInteraction* New() const final {
    return CreateMaybeMessage<ManualInteraction>(NULL);
  }

  ManualInteraction* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ManualInteraction>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ManualInteraction& from);
  void MergeFrom(const ManualInteraction& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ManualInteraction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string description = 1;
  void clear_description();
  static const int kDescriptionFieldNumber = 1;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // string type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // string value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:proto.ManualInteraction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_plugin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JobResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.JobResult) */ {
 public:
  JobResult();
  virtual ~JobResult();

  JobResult(const JobResult& from);

  inline JobResult& operator=(const JobResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JobResult(JobResult&& from) noexcept
    : JobResult() {
    *this = ::std::move(from);
  }

  inline JobResult& operator=(JobResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const JobResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const JobResult* internal_default_instance() {
    return reinterpret_cast<const JobResult*>(
               &_JobResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(JobResult* other);
  friend void swap(JobResult& a, JobResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JobResult* New() const final {
    return CreateMaybeMessage<JobResult>(NULL);
  }

  JobResult* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<JobResult>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const JobResult& from);
  void MergeFrom(const JobResult& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(JobResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message = 4;
  void clear_message();
  static const int kMessageFieldNumber = 4;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // uint32 unique_id = 1;
  void clear_unique_id();
  static const int kUniqueIdFieldNumber = 1;
  ::google::protobuf::uint32 unique_id() const;
  void set_unique_id(::google::protobuf::uint32 value);

  // bool failed = 2;
  void clear_failed();
  static const int kFailedFieldNumber = 2;
  bool failed() const;
  void set_failed(bool value);

  // bool exit_pipeline = 3;
  void clear_exit_pipeline();
  static const int kExitPipelineFieldNumber = 3;
  bool exit_pipeline() const;
  void set_exit_pipeline(bool value);

  // @@protoc_insertion_point(class_scope:proto.JobResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::uint32 unique_id_;
  bool failed_;
  bool exit_pipeline_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_plugin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Empty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Empty) */ {
 public:
  Empty();
  virtual ~Empty();

  Empty(const Empty& from);

  inline Empty& operator=(const Empty& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Empty(Empty&& from) noexcept
    : Empty() {
    *this = ::std::move(from);
  }

  inline Empty& operator=(Empty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Empty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Empty* internal_default_instance() {
    return reinterpret_cast<const Empty*>(
               &_Empty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Empty* other);
  friend void swap(Empty& a, Empty& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Empty* New() const final {
    return CreateMaybeMessage<Empty>(NULL);
  }

  Empty* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Empty>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Empty& from);
  void MergeFrom(const Empty& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Empty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.Empty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_plugin_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Job

// uint32 unique_id = 1;
inline void Job::clear_unique_id() {
  unique_id_ = 0u;
}
inline ::google::protobuf::uint32 Job::unique_id() const {
  // @@protoc_insertion_point(field_get:proto.Job.unique_id)
  return unique_id_;
}
inline void Job::set_unique_id(::google::protobuf::uint32 value) {
  
  unique_id_ = value;
  // @@protoc_insertion_point(field_set:proto.Job.unique_id)
}

// string title = 2;
inline void Job::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Job::title() const {
  // @@protoc_insertion_point(field_get:proto.Job.title)
  return title_.GetNoArena();
}
inline void Job::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Job.title)
}
#if LANG_CXX11
inline void Job::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Job.title)
}
#endif
inline void Job::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Job.title)
}
inline void Job::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Job.title)
}
inline ::std::string* Job::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:proto.Job.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Job::release_title() {
  // @@protoc_insertion_point(field_release:proto.Job.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Job::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:proto.Job.title)
}

// string description = 3;
inline void Job::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Job::description() const {
  // @@protoc_insertion_point(field_get:proto.Job.description)
  return description_.GetNoArena();
}
inline void Job::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Job.description)
}
#if LANG_CXX11
inline void Job::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Job.description)
}
#endif
inline void Job::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Job.description)
}
inline void Job::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Job.description)
}
inline ::std::string* Job::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:proto.Job.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Job::release_description() {
  // @@protoc_insertion_point(field_release:proto.Job.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Job::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:proto.Job.description)
}

// repeated uint32 dependson = 4;
inline int Job::dependson_size() const {
  return dependson_.size();
}
inline void Job::clear_dependson() {
  dependson_.Clear();
}
inline ::google::protobuf::uint32 Job::dependson(int index) const {
  // @@protoc_insertion_point(field_get:proto.Job.dependson)
  return dependson_.Get(index);
}
inline void Job::set_dependson(int index, ::google::protobuf::uint32 value) {
  dependson_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.Job.dependson)
}
inline void Job::add_dependson(::google::protobuf::uint32 value) {
  dependson_.Add(value);
  // @@protoc_insertion_point(field_add:proto.Job.dependson)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Job::dependson() const {
  // @@protoc_insertion_point(field_list:proto.Job.dependson)
  return dependson_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Job::mutable_dependson() {
  // @@protoc_insertion_point(field_mutable_list:proto.Job.dependson)
  return &dependson_;
}

// repeated .proto.Argument args = 5;
inline int Job::args_size() const {
  return args_.size();
}
inline void Job::clear_args() {
  args_.Clear();
}
inline ::proto::Argument* Job::mutable_args(int index) {
  // @@protoc_insertion_point(field_mutable:proto.Job.args)
  return args_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::proto::Argument >*
Job::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:proto.Job.args)
  return &args_;
}
inline const ::proto::Argument& Job::args(int index) const {
  // @@protoc_insertion_point(field_get:proto.Job.args)
  return args_.Get(index);
}
inline ::proto::Argument* Job::add_args() {
  // @@protoc_insertion_point(field_add:proto.Job.args)
  return args_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::Argument >&
Job::args() const {
  // @@protoc_insertion_point(field_list:proto.Job.args)
  return args_;
}

// .proto.ManualInteraction interaction = 6;
inline bool Job::has_interaction() const {
  return this != internal_default_instance() && interaction_ != NULL;
}
inline void Job::clear_interaction() {
  if (GetArenaNoVirtual() == NULL && interaction_ != NULL) {
    delete interaction_;
  }
  interaction_ = NULL;
}
inline const ::proto::ManualInteraction& Job::_internal_interaction() const {
  return *interaction_;
}
inline const ::proto::ManualInteraction& Job::interaction() const {
  const ::proto::ManualInteraction* p = interaction_;
  // @@protoc_insertion_point(field_get:proto.Job.interaction)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ManualInteraction*>(
      &::proto::_ManualInteraction_default_instance_);
}
inline ::proto::ManualInteraction* Job::release_interaction() {
  // @@protoc_insertion_point(field_release:proto.Job.interaction)
  
  ::proto::ManualInteraction* temp = interaction_;
  interaction_ = NULL;
  return temp;
}
inline ::proto::ManualInteraction* Job::mutable_interaction() {
  
  if (interaction_ == NULL) {
    auto* p = CreateMaybeMessage<::proto::ManualInteraction>(GetArenaNoVirtual());
    interaction_ = p;
  }
  // @@protoc_insertion_point(field_mutable:proto.Job.interaction)
  return interaction_;
}
inline void Job::set_allocated_interaction(::proto::ManualInteraction* interaction) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete interaction_;
  }
  if (interaction) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interaction = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interaction, submessage_arena);
    }
    
  } else {
    
  }
  interaction_ = interaction;
  // @@protoc_insertion_point(field_set_allocated:proto.Job.interaction)
}

// -------------------------------------------------------------------

// Argument

// string description = 1;
inline void Argument::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Argument::description() const {
  // @@protoc_insertion_point(field_get:proto.Argument.description)
  return description_.GetNoArena();
}
inline void Argument::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Argument.description)
}
#if LANG_CXX11
inline void Argument::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Argument.description)
}
#endif
inline void Argument::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Argument.description)
}
inline void Argument::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Argument.description)
}
inline ::std::string* Argument::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:proto.Argument.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Argument::release_description() {
  // @@protoc_insertion_point(field_release:proto.Argument.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Argument::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:proto.Argument.description)
}

// string type = 2;
inline void Argument::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Argument::type() const {
  // @@protoc_insertion_point(field_get:proto.Argument.type)
  return type_.GetNoArena();
}
inline void Argument::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Argument.type)
}
#if LANG_CXX11
inline void Argument::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Argument.type)
}
#endif
inline void Argument::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Argument.type)
}
inline void Argument::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Argument.type)
}
inline ::std::string* Argument::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:proto.Argument.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Argument::release_type() {
  // @@protoc_insertion_point(field_release:proto.Argument.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Argument::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:proto.Argument.type)
}

// string key = 3;
inline void Argument::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Argument::key() const {
  // @@protoc_insertion_point(field_get:proto.Argument.key)
  return key_.GetNoArena();
}
inline void Argument::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Argument.key)
}
#if LANG_CXX11
inline void Argument::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Argument.key)
}
#endif
inline void Argument::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Argument.key)
}
inline void Argument::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Argument.key)
}
inline ::std::string* Argument::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:proto.Argument.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Argument::release_key() {
  // @@protoc_insertion_point(field_release:proto.Argument.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Argument::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:proto.Argument.key)
}

// string value = 4;
inline void Argument::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Argument::value() const {
  // @@protoc_insertion_point(field_get:proto.Argument.value)
  return value_.GetNoArena();
}
inline void Argument::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Argument.value)
}
#if LANG_CXX11
inline void Argument::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Argument.value)
}
#endif
inline void Argument::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Argument.value)
}
inline void Argument::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Argument.value)
}
inline ::std::string* Argument::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:proto.Argument.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Argument::release_value() {
  // @@protoc_insertion_point(field_release:proto.Argument.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Argument::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:proto.Argument.value)
}

// -------------------------------------------------------------------

// ManualInteraction

// string description = 1;
inline void ManualInteraction::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ManualInteraction::description() const {
  // @@protoc_insertion_point(field_get:proto.ManualInteraction.description)
  return description_.GetNoArena();
}
inline void ManualInteraction::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ManualInteraction.description)
}
#if LANG_CXX11
inline void ManualInteraction::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ManualInteraction.description)
}
#endif
inline void ManualInteraction::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ManualInteraction.description)
}
inline void ManualInteraction::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ManualInteraction.description)
}
inline ::std::string* ManualInteraction::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:proto.ManualInteraction.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualInteraction::release_description() {
  // @@protoc_insertion_point(field_release:proto.ManualInteraction.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualInteraction::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:proto.ManualInteraction.description)
}

// string type = 2;
inline void ManualInteraction::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ManualInteraction::type() const {
  // @@protoc_insertion_point(field_get:proto.ManualInteraction.type)
  return type_.GetNoArena();
}
inline void ManualInteraction::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ManualInteraction.type)
}
#if LANG_CXX11
inline void ManualInteraction::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ManualInteraction.type)
}
#endif
inline void ManualInteraction::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ManualInteraction.type)
}
inline void ManualInteraction::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ManualInteraction.type)
}
inline ::std::string* ManualInteraction::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:proto.ManualInteraction.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualInteraction::release_type() {
  // @@protoc_insertion_point(field_release:proto.ManualInteraction.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualInteraction::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:proto.ManualInteraction.type)
}

// string value = 3;
inline void ManualInteraction::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ManualInteraction::value() const {
  // @@protoc_insertion_point(field_get:proto.ManualInteraction.value)
  return value_.GetNoArena();
}
inline void ManualInteraction::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ManualInteraction.value)
}
#if LANG_CXX11
inline void ManualInteraction::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ManualInteraction.value)
}
#endif
inline void ManualInteraction::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ManualInteraction.value)
}
inline void ManualInteraction::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ManualInteraction.value)
}
inline ::std::string* ManualInteraction::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:proto.ManualInteraction.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualInteraction::release_value() {
  // @@protoc_insertion_point(field_release:proto.ManualInteraction.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualInteraction::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:proto.ManualInteraction.value)
}

// -------------------------------------------------------------------

// JobResult

// uint32 unique_id = 1;
inline void JobResult::clear_unique_id() {
  unique_id_ = 0u;
}
inline ::google::protobuf::uint32 JobResult::unique_id() const {
  // @@protoc_insertion_point(field_get:proto.JobResult.unique_id)
  return unique_id_;
}
inline void JobResult::set_unique_id(::google::protobuf::uint32 value) {
  
  unique_id_ = value;
  // @@protoc_insertion_point(field_set:proto.JobResult.unique_id)
}

// bool failed = 2;
inline void JobResult::clear_failed() {
  failed_ = false;
}
inline bool JobResult::failed() const {
  // @@protoc_insertion_point(field_get:proto.JobResult.failed)
  return failed_;
}
inline void JobResult::set_failed(bool value) {
  
  failed_ = value;
  // @@protoc_insertion_point(field_set:proto.JobResult.failed)
}

// bool exit_pipeline = 3;
inline void JobResult::clear_exit_pipeline() {
  exit_pipeline_ = false;
}
inline bool JobResult::exit_pipeline() const {
  // @@protoc_insertion_point(field_get:proto.JobResult.exit_pipeline)
  return exit_pipeline_;
}
inline void JobResult::set_exit_pipeline(bool value) {
  
  exit_pipeline_ = value;
  // @@protoc_insertion_point(field_set:proto.JobResult.exit_pipeline)
}

// string message = 4;
inline void JobResult::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& JobResult::message() const {
  // @@protoc_insertion_point(field_get:proto.JobResult.message)
  return message_.GetNoArena();
}
inline void JobResult::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.JobResult.message)
}
#if LANG_CXX11
inline void JobResult::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.JobResult.message)
}
#endif
inline void JobResult::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.JobResult.message)
}
inline void JobResult::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.JobResult.message)
}
inline ::std::string* JobResult::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:proto.JobResult.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JobResult::release_message() {
  // @@protoc_insertion_point(field_release:proto.JobResult.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JobResult::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:proto.JobResult.message)
}

// -------------------------------------------------------------------

// Empty

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_plugin_2eproto
